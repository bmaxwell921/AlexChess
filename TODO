Basic Rundown of how the game works:
	1) Run the application
	2) Decide whether to load a saved game or start a new one
	3) If Load then we pull the current game from the server and 
		either make our move if it's our turn or wait
	4) After making our move push the new game board/move to the server 
		so the other person has it	

Special Notes:
	-Keep in mind that right now the board starts with position 0,0 at the 
		top left spot. Run the Main class and press New Game to see what I mean.
		This will need to change since we want the perspective to change for each
		player.

Alex's Tasks (Roughly by priority):
	-Implement each of the GamePiece classes (Bishop, King, Knight, Pawn, Queen, Rook)
		-Look at the comments to figure out how each one of them works. The comments 
			actually found in the ChessPiece class
	-Implement the board class
		-Comments should give a good idea of how everything works
	-Add @author tags to the stuff you work on (Thats in the comment section above the
		"public class ..." line
	-If you're interested in the UI stuff feel free to look thru it, it starts in the Main class
	
Brandon's Tasks (Kinda by priority):
	-Finish the UI
		-Implement GameIOUtil
			- Serialize stuff
		-Make sure pressing X button saves first (hold onto old location)
		-Get everything sized well
	-Finish design details
		- How to serialize all the stuff for saving to the local file system
		- How do you start a game?
	-Implement saving the game state and loading the game state			
	-Implement server interactions
		-Should just need a servlet to handle get and post requests and then
			a Util or something to send get and post requests to the servlet
	- Optimizations
	 	- Fix the ChessPanel to have logic in the ChessGame
		- Stat panel doesn't line wrap	
		-Images aren't resized correctly when you change the window size
		- Only on my screen since my monitor is rectangular. Set the size of the application
			to be square		